name: Atualizar Cache de Estat√≠sticas S√≠smicas

# Gatilho: Isto faz com que a Action corra a cada 30 minutos
on:
  schedule:
    - cron: '*/30 * * * *'
  # Isto tamb√©m permite que voc√™ execute manualmente a partir do separador "Actions" do GitHub
  workflow_dispatch:

jobs:
  build-stats:
    runs-on: ubuntu-latest # Usa um servidor Linux padr√£o
    steps:
      
      # 1. Baixa o c√≥digo do teu reposit√≥rio (para ter acesso aos scripts)
      - name: Checkout do Reposit√≥rio
        uses: actions/checkout@v3

      # 2. Configura o ambiente Node.js para correr o script
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Usamos Node.js vers√£o 16

      # 3. Instala as depend√™ncias (o node-fetch do package.json)
      - name: Instalar Depend√™ncias
        run: npm install

      # 4. EXECUTA O NOSSO SCRIPT!
      # Isto ir√° gerar o ficheiro stats_cache.json na raiz
      - name: Gerar Ficheiro de Stats
        run: node processar_stats.js

      # 5. FAZ O COMMIT AUTOM√ÅTICO: Pega no stats_cache.json gerado e
      #    salva-o de volta no teu reposit√≥rio.
      - name: Commit do Ficheiro JSON
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "üìä [Bot] Atualiza√ß√£o autom√°tica do cache de estat√≠sticas"
          # IMPORTANTE: Diz ao Action para salvar APENAS este ficheiro
          file_pattern: stats_cache.json
          # Adiciona o reposit√≥rio e o branch (necess√°rio para a Action funcionar)
          repository: .
          branch: main # Ou 'master', dependendo do nome do teu branch principal
          commit_user_name: StreamNew Stats Bot # Nome do "Bot" que faz o commit
          commit_user_email: streamnew@post.com # Email (pode ser o teu)
          commit_author: StreamNew Stats Bot <streamnew@post.com>
